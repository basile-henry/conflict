-- Initial conflict.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                conflict
version:             0.1.0.0
synopsis:            A small esoteric language giving semantics to git merge conflict.
description:         Conflict is a small esoteric language that was inspired by
                     all these annoying git merge conflicts that sometime get
                     commited by mistake.
                     What if these merge conflicts actually had meaningful
                     semantics in the execution of the program?
                     It is this question I am attempting to answer with this
                     silly programming language.
                     So what does happen when a merge conflict block is reached?
                     Simple, the main thread is forked in two, where both
                     threads keep on using the same global scope while
                     executing their side of the conflict block. This of course
                     comes with all the concurency issues one might expect.
                     The rest of the language is losely based on some flavour
                     of BASIC and is kept as small as possible.
homepage:            https://github.com/basile-henry/conflict
license:             MIT
license-file:        LICENSE
author:              Basile Henry
maintainer:          bjm.henry@gmail.com
category:            Language
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

library
  exposed-modules:     Conflict.AST
                       Conflict.Parser
  build-depends:       base >=4.11 && <4.12
                     , text
                     , megaparsec
  hs-source-dirs:      src
  default-language:    Haskell2010

executable conflict
  main-is:             Main.hs
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.11 && <4.12
                     , conflict
                     , text
  hs-source-dirs:      app
  default-language:    Haskell2010
